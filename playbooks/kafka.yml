- hosts: servers

  tasks:
    - name: ensure docker network exists
      docker_network:
        name: decluster_network

    - name: run zookeeper instances
      docker_container:
        name: zookeeper-1
        image: confluentinc/cp-zookeeper:5.3.0
        ports:
          - "2181:2181"
        volumes:
          - /data/db:/data/db
        env:      
          ZOOKEEPER_SERVER_ID: "1"
          ZOOKEEPER_CLIENT_PORT: "2181"
          ZOOKEEPER_TICK_TIME: "2000"
          # ZOOKEEPER_INIT_LIMIT: "5"
          # ZOOKEEPER_SYNC_LIMIT: "2"
        networks:
          - name: decluster_network
            aliases:
              - zookeeper-1

    - name: run kafka instances
      docker_container:
        name: "{{ item.name }}"
        image: confluentinc/cp-kafka:5.3.0
        ports:
          - "{{ item.port }}:19092"
        env:
          KAFKA_BROKER_ID: "{{ item.id }}"
          KAFKA_NUM_PARTITIONS: "4"
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "3"
          KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
          KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://{{ item.name }}:{{ item.port }}"
        networks:
          - name: decluster_network
            aliases:
              - "{{ item.name }}"
      with_items:
        - name: kafka-1
          id: 1
          port: 19092
        - name: kafka-2
          id: 2
          port: 29092

    - name: run schema registery
      docker_container:
        name: schema-registry
        image: confluentinc/cp-schema-registry:5.3.0
        ports:
          - "8081:8081"
        env:
          SCHEMA_REGISTRY_HOST_NAME: schema-registry
          SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper-1:2181'
        networks:
          - name: decluster_network
            aliases:
              - schema-registry

    - name: run kafka REST API
      docker_container:
        name: kafka-restapi
        image: confluentinc/cp-kafka-rest:5.3.0
        ports:
          - 8000:8082
        env:
          KAFKA_REST_HOST_NAME: kafka-restapi
          KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka-1:19092,kafka-2:29092'
          KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
          KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
        networks:
          - name: decluster_network
            aliases:
              - kafka-restapi